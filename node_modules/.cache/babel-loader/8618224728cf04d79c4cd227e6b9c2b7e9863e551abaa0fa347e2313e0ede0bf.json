{"ast":null,"code":"var _jsxFileName = \"/Users/emaad/Desktop/reactproject-2/src/components/Card.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(props) {\n  let badgeText;\n  if (props.openSpots === 0) {\n    badgeText = \"SOLD OUT\";\n  } else if (props.location === \"Online\") {\n    badgeText = \"ONLINE\";\n  }\n\n  /*\n  Challenge:\n  1. Display the correct text in the badge based on the logic above\n  2. Only display the badge if badgeText has a value\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [badgeText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card--badge\",\n      children: badgeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `../images/${props.img}`,\n      className: \"card--image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card--stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../images/star.png\",\n        className: \"card--star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"gray\",\n        children: [\"(\", props.reviewCount, \") \\u2022 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"gray\",\n        children: props.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card--title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card--price\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bold\",\n        children: [\"From $\", props.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 40\n      }, this), \" / person\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Card","props","badgeText","openSpots","location","img","rating","reviewCount","title","price"],"sources":["/Users/emaad/Desktop/reactproject-2/src/components/Card.js"],"sourcesContent":["import React from \"react\"\n\nexport default function Card(props) {\n    let badgeText\n    if (props.openSpots === 0) {\n        badgeText = \"SOLD OUT\"\n    } else if (props.location === \"Online\") {\n        badgeText = \"ONLINE\"\n    }\n    \n    /*\n    Challenge:\n    1. Display the correct text in the badge based on the logic above\n    2. Only display the badge if badgeText has a value\n    */\n    \n    return (\n        <div className=\"card\">\n            {badgeText && <div className=\"card--badge\">{badgeText}</div>}\n            <img src={`../images/${props.img}`} className=\"card--image\" />\n            <div className=\"card--stats\">\n                <img src=\"../images/star.png\" className=\"card--star\" />\n                <span>{props.rating}</span>\n                <span className=\"gray\">({props.reviewCount}) â€¢ </span>\n                <span className=\"gray\">{props.location}</span>\n            </div>\n            <p className=\"card--title\">{props.title}</p>\n            <p className=\"card--price\"><span className=\"bold\">From ${props.price}</span> / person</p>\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,eAAe,SAASC,IAAI,CAACC,KAAK,EAAE;EAChC,IAAIC,SAAS;EACb,IAAID,KAAK,CAACE,SAAS,KAAK,CAAC,EAAE;IACvBD,SAAS,GAAG,UAAU;EAC1B,CAAC,MAAM,IAAID,KAAK,CAACG,QAAQ,KAAK,QAAQ,EAAE;IACpCF,SAAS,GAAG,QAAQ;EACxB;;EAEA;AACJ;AACA;AACA;AACA;;EAEI,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,WAChBA,SAAS,iBAAI;MAAK,SAAS,EAAC,aAAa;MAAA,UAAEA;IAAS;MAAA;MAAA;MAAA;IAAA,QAAO,eAC5D;MAAK,GAAG,EAAG,aAAYD,KAAK,CAACI,GAAI,EAAE;MAAC,SAAS,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eAC9D;MAAK,SAAS,EAAC,aAAa;MAAA,wBACxB;QAAK,GAAG,EAAC,oBAAoB;QAAC,SAAS,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eACvD;QAAA,UAAOJ,KAAK,CAACK;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC3B;QAAM,SAAS,EAAC,MAAM;QAAA,WAAC,GAAC,EAACL,KAAK,CAACM,WAAW,EAAC,WAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO,eACtD;QAAM,SAAS,EAAC,MAAM;QAAA,UAAEN,KAAK,CAACG;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5C,eACN;MAAG,SAAS,EAAC,aAAa;MAAA,UAAEH,KAAK,CAACO;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eAC5C;MAAG,SAAS,EAAC,aAAa;MAAA,wBAAC;QAAM,SAAS,EAAC,MAAM;QAAA,WAAC,QAAM,EAACP,KAAK,CAACQ,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAQ,aAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACvF;AAEd;AAAC,KA5BuBT,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}